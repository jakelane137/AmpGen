
[2;31m    █████╗ ███╗   ███╗██████╗  ██████╗ ███████╗███╗   ██╗
   ██╔══██╗████╗ ████║██╔══██╗██╔════╝ ██╔════╝████╗  ██║
   ███████║██╔████╔██║██████╔╝██║  ███╗█████╗  ██╔██╗ ██║
   ██╔══██║██║╚██╔╝██║██╔═══╝ ██║   ██║██╔══╝  ██║╚██╗██║
   ██║  ██║██║ ╚═╝ ██║██║     ╚██████╔╝███████╗██║ ╚████║
   ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝      ╚═════╝ ╚══════╝╚═╝  ╚═══╝
[0m
[1m                      version 1.2
        build: gcc 8.2.0  Jul 11 2019 12:28:01[0m

[1m Release notes (v1r2)[0m
 - Improved thread support for CoherentSum
 - Add examples/QcGenerator for Ψ(3770) decays 
 - Updated ExpressionParser with improved stability.
 - Removed unused / untested lineshapes AxialKaon and ObelixRho 

[2;34mvoid OptionsParser::import                     INFO         [0mImporting: opts/freePoly.opt
[2;34mbool ParticlePropertiesList::readFile          INFO         [0mReading file: /afs/cern.ch/user/j/jolane/work/ampGen//options/mass_width.csv
[2;34mbool ParticlePropertiesList::readFile          INFO         [0mReading file: /afs/cern.ch/user/j/jolane/work/ampGen//options/MintDalitzSpecialParticles.csv
[1;35mOptionsParser::import                          WARNING      [0mOverwriting parameter: EventType
[2;34mvoid OptionsParser::import                     INFO         [0mImporting: /afs/cern.ch/user/j/jolane/work/ampGen/options/kMatrix.opt
[2;34mint main                                       INFO         [0mUsing: 10 / 10 threads
[2;34mint main                                       INFO         [0mGenerating events with type = DA → [K0S0, pi+, pi-]
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K(0)*(1430)+[GLASS.BL]{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K(0)*(1430)bar-[GLASS.BL]{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K(2)*(1430)+{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K(2)*(1430)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K*(1410)+{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K*(1410)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K*(1680)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K*(892)+{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{K*(892)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{f(2)(1270)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{omega(782)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{rho(1450)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{rho(770)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.pole.0]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.pole.1]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.pole.2]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.pole.3]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.prod.0]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.prod.1]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.prod.2]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[MagPoly.MyMagPoly]{D0{PiPi00[kMatrix.prod.3]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K(0)*(1430)+[GLASS.BL]{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K(0)*(1430)bar-[GLASS.BL]{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K(2)*(1430)+{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K(2)*(1430)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K*(1410)+{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K*(1410)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K*(1680)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K*(892)+{K0S0,pi+},pi-}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{K*(892)bar-{K0S0,pi-},pi+}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{f(2)(1270)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{omega(782)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{rho(1450)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{rho(770)0{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.pole.0]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.pole.1]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.pole.2]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.pole.3]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.prod.0]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.prod.1]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.prod.2]{pi+,pi-},K0S0}}
[2;34mCoherentSum::CoherentSum                       INFO         [0mDA[PhasePoly.MyPhasePoly]{D0{PiPi00[kMatrix.prod.3]{pi+,pi-},K0S0}}
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::MagPoly::get             INFO         [0m2D Polynomial of the form P(x,y), used to correct the fitted magnitude of D->KsPiPi decays 
[2;34mExpression Lineshape::MagPoly::get             INFO         [0mStarting to make Mag Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mExpression Lineshape::PhasePoly::get           INFO         [0m2D exponential Polynomial of the form e^(iP(x,y)), used to correct the fitted phase of D->KsPiPi decays 
Starting to make Phase Poly
[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mSetting normalisation constant = 51.686
[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mCompleted:  18% [|||||||||||                                                 ] ε[gen] = 1.83% , 0 seconds[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mCompleted:  36% [|||||||||||||||||||||                                       ] ε[gen] = 1.78% , 1 seconds[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mCompleted:  54% [||||||||||||||||||||||||||||||||                            ] ε[gen] = 1.78% , 2 seconds[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mCompleted:  72% [|||||||||||||||||||||||||||||||||||||||||||                 ] ε[gen] = 1.88% , 2 seconds[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mCompleted:  91% [||||||||||||||||||||||||||||||||||||||||||||||||||||||      ] ε[gen] = 1.85% , 3 seconds[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mCompleted: 100% [||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||] ε[gen] = 0.87% , 4 seconds
[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mGenerated 10000 events in 4228.56 ms
[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mGenerating phase space : 710.775 ms
[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mEvaluating PDF         : 3243.89 ms
[2;34mvoid Generator<PHASESPACE>::fillEventList      INFO         [0mDoing accept/reject    : 63.9344 ms
[2;34mint main                                       INFO         [0mMaking 2D projections...
[2;34mint main                                       INFO         [0mWriting output file 
